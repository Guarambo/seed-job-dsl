pipeline {
    agent any
    stages {
        stage("checkout"){
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'git@git.pragma.com.co:DevOps/practica-java-devops.git']]])
            }
        }
        stage("build"){
            steps{
                // -DskipTests es para no ejecutar pruebas unitarias
                sh 'mvn -f practica-devops/ clean install -DskipTests'
            }
        }
        stage("scan"){
            environment {
                scannerHome = tool 'sonar_scanner'
            }
             steps {
                    //sh 'mvn clean install sonar:sonar'
                    withSonarQubeEnv('sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=practicaJava:Test -Dsonar.projectName=practicaJava -Dsonar.projectVersion=0.1 -Dsonar.sources=practica-devops/src -Dsonar.java.binaries=target/"
                        //sh "mvn -f practica-devops/ sonar:sonar"
                        
                    }
                    timeout(time: 10, unit: 'MINUTES') {
                        //Sirve para detener la ejecucion si no es Success
                        waitForQualityGate abortPipeline: true
                    }
            }
        }
    }
}